/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;
    componentOnReady(done: (ele?: this) => void): void;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}

import 'ionicons';
import '@ionic/core';


declare global {

  namespace StencilComponents {
    interface EditorView {

    }
  }

  interface HTMLEditorViewElement extends StencilComponents.EditorView, HTMLStencilElement {}

  var HTMLEditorViewElement: {
    prototype: HTMLEditorViewElement;
    new (): HTMLEditorViewElement;
  };
  interface HTMLElementTagNameMap {
    'editor-view': HTMLEditorViewElement;
  }
  interface ElementTagNameMap {
    'editor-view': HTMLEditorViewElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'editor-view': JSXElements.EditorViewAttributes;
    }
  }
  namespace JSXElements {
    export interface EditorViewAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface HomeView {

    }
  }

  interface HTMLHomeViewElement extends StencilComponents.HomeView, HTMLStencilElement {}

  var HTMLHomeViewElement: {
    prototype: HTMLHomeViewElement;
    new (): HTMLHomeViewElement;
  };
  interface HTMLElementTagNameMap {
    'home-view': HTMLHomeViewElement;
  }
  interface ElementTagNameMap {
    'home-view': HTMLHomeViewElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'home-view': JSXElements.HomeViewAttributes;
    }
  }
  namespace JSXElements {
    export interface HomeViewAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface StoryListTab {

    }
  }

  interface HTMLStoryListTabElement extends StencilComponents.StoryListTab, HTMLStencilElement {}

  var HTMLStoryListTabElement: {
    prototype: HTMLStoryListTabElement;
    new (): HTMLStoryListTabElement;
  };
  interface HTMLElementTagNameMap {
    'story-list-tab': HTMLStoryListTabElement;
  }
  interface ElementTagNameMap {
    'story-list-tab': HTMLStoryListTabElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'story-list-tab': JSXElements.StoryListTabAttributes;
    }
  }
  namespace JSXElements {
    export interface StoryListTabAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface StoryPublishTab {

    }
  }

  interface HTMLStoryPublishTabElement extends StencilComponents.StoryPublishTab, HTMLStencilElement {}

  var HTMLStoryPublishTabElement: {
    prototype: HTMLStoryPublishTabElement;
    new (): HTMLStoryPublishTabElement;
  };
  interface HTMLElementTagNameMap {
    'story-publish-tab': HTMLStoryPublishTabElement;
  }
  interface ElementTagNameMap {
    'story-publish-tab': HTMLStoryPublishTabElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'story-publish-tab': JSXElements.StoryPublishTabAttributes;
    }
  }
  namespace JSXElements {
    export interface StoryPublishTabAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface StorySettingsTab {

    }
  }

  interface HTMLStorySettingsTabElement extends StencilComponents.StorySettingsTab, HTMLStencilElement {}

  var HTMLStorySettingsTabElement: {
    prototype: HTMLStorySettingsTabElement;
    new (): HTMLStorySettingsTabElement;
  };
  interface HTMLElementTagNameMap {
    'story-settings-tab': HTMLStorySettingsTabElement;
  }
  interface ElementTagNameMap {
    'story-settings-tab': HTMLStorySettingsTabElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'story-settings-tab': JSXElements.StorySettingsTabAttributes;
    }
  }
  namespace JSXElements {
    export interface StorySettingsTabAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface StoryTestTab {

    }
  }

  interface HTMLStoryTestTabElement extends StencilComponents.StoryTestTab, HTMLStencilElement {}

  var HTMLStoryTestTabElement: {
    prototype: HTMLStoryTestTabElement;
    new (): HTMLStoryTestTabElement;
  };
  interface HTMLElementTagNameMap {
    'story-test-tab': HTMLStoryTestTabElement;
  }
  interface ElementTagNameMap {
    'story-test-tab': HTMLStoryTestTabElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'story-test-tab': JSXElements.StoryTestTabAttributes;
    }
  }
  namespace JSXElements {
    export interface StoryTestTabAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface StorytreeApp {

    }
  }

  interface HTMLStorytreeAppElement extends StencilComponents.StorytreeApp, HTMLStencilElement {}

  var HTMLStorytreeAppElement: {
    prototype: HTMLStorytreeAppElement;
    new (): HTMLStorytreeAppElement;
  };
  interface HTMLElementTagNameMap {
    'storytree-app': HTMLStorytreeAppElement;
  }
  interface ElementTagNameMap {
    'storytree-app': HTMLStorytreeAppElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'storytree-app': JSXElements.StorytreeAppAttributes;
    }
  }
  namespace JSXElements {
    export interface StorytreeAppAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface StorytreeEditor {

    }
  }

  interface HTMLStorytreeEditorElement extends StencilComponents.StorytreeEditor, HTMLStencilElement {}

  var HTMLStorytreeEditorElement: {
    prototype: HTMLStorytreeEditorElement;
    new (): HTMLStorytreeEditorElement;
  };
  interface HTMLElementTagNameMap {
    'storytree-editor': HTMLStorytreeEditorElement;
  }
  interface ElementTagNameMap {
    'storytree-editor': HTMLStorytreeEditorElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'storytree-editor': JSXElements.StorytreeEditorAttributes;
    }
  }
  namespace JSXElements {
    export interface StorytreeEditorAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface StorytreeMinimap {

    }
  }

  interface HTMLStorytreeMinimapElement extends StencilComponents.StorytreeMinimap, HTMLStencilElement {}

  var HTMLStorytreeMinimapElement: {
    prototype: HTMLStorytreeMinimapElement;
    new (): HTMLStorytreeMinimapElement;
  };
  interface HTMLElementTagNameMap {
    'storytree-minimap': HTMLStorytreeMinimapElement;
  }
  interface ElementTagNameMap {
    'storytree-minimap': HTMLStorytreeMinimapElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'storytree-minimap': JSXElements.StorytreeMinimapAttributes;
    }
  }
  namespace JSXElements {
    export interface StorytreeMinimapAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface UserTab {

    }
  }

  interface HTMLUserTabElement extends StencilComponents.UserTab, HTMLStencilElement {}

  var HTMLUserTabElement: {
    prototype: HTMLUserTabElement;
    new (): HTMLUserTabElement;
  };
  interface HTMLElementTagNameMap {
    'user-tab': HTMLUserTabElement;
  }
  interface ElementTagNameMap {
    'user-tab': HTMLUserTabElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'user-tab': JSXElements.UserTabAttributes;
    }
  }
  namespace JSXElements {
    export interface UserTabAttributes extends HTMLAttributes {

    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }
